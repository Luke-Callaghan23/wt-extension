{
	"name": "wtaniwe-web",
	"displayName": "WTANIWE (web) - Writing Tool, An Integrated Writing Environment (web extension)",
	"description": "Writing Tool, An Integrated Writing Environment (web extension)",
	"version": "0.0.95",
	"publisher": "luke-callaghan",
	"private": false,
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/Luke-Callaghan23/wt-extension"
	},
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:jsonc"
	],
	"browser": "./dist/web/extension.js",
	"contributes": {
		"configuration": {
			"title": "Writing Tool Configuration",
			"properties": {
				"wt.timedSearches.todo": {
					"description": "Enable automatic TODO querying",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.wordWatcher": {
					"description": "Enable automatic querying/highlighting for watched words",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.spellcheck": {
					"description": "Enable automatic spellcheck",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.very": {
					"title": "Enable automatic checks for instances of the word 'very'",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.colors": {
					"description": "Enable automatic checks and highlighting for 'color' words",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.textStyle": {
					"description": "Enable automatic text styling",
					"type": "boolean",
					"default": true
				},
				"wt.timedSearches.workBible": {
					"description": "Enable automatic querying for terms in your notes",
					"type": "boolean",
					"default": true
				}
			}
		},
		"viewsWelcome": [
			{
				"view": "wt.outline",
				"contents": "No WT workspace found.\n[Create Workspace](command:wt.createWorkspace)\nImport a workspace from a .iwe file.\n[Import Workspace](command:wt.importWorkspace)\nAttempt to reload the current workspace.\n[Reload](command:wt.reload)",
				"when": "!wt.valid"
			},
			{
				"view": "wt.export",
				"contents": "Export your work into documents.\n[Export Documents](command:wt.export.exportDocuments)\nExport your work into a single .iwe file for portability.\n[Export Workspace](command:wt.export.exportWorkspace)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "wt",
					"title": "Writing Tool",
					"icon": "$(bookmark)"
				}
			],
			"panel": [
				{
					"id": "workBible",
					"title": "Notes",
					"icon": "$(bookmark)"
				}
			]
		},
		"views": {
			"wt": [
				{
					"id": "wt.outline",
					"name": "Outline",
					"icon": "media/dep.svg",
					"contextualTitle": "Outline"
				},
				{
					"id": "wt.wordWatcher",
					"name": "Word Watcher",
					"icon": "media/dep.svg",
					"contextualTitle": "Word Watcher",
					"when": "wt.valid"
				},
				{
					"id": "wt.todo",
					"name": "TODOs",
					"icon": "media/dep.svg",
					"contextualTitle": "TODOs",
					"when": "wt.valid"
				},
				{
					"type": "webview",
					"id": "wt.synonyms",
					"name": "Synonyms",
					"icon": "media/dep.svg",
					"contextualTitle": "Synonyms",
					"when": "wt.valid"
				},
				{
					"id": "wt.recyclingBin",
					"name": "Recycling Bin",
					"contextualTitle": "Recycling Bin",
					"when": "wt.valid"
				}
			],
			"workBible": [
				{
					"id": "wt.workBible.tree",
					"name": "World Bible",
					"icon": "media/dep.svg",
					"contextualTitle": "Notes"
				}
			]
		},
		"commands": [
			{
				"command": "wt.tabLabels.renameActiveTab",
				"title": "Writing Tool: Rename Active Tab"
			},
			{
				"command": "wt.tabLabels.rename",
				"title": "Writing Tool: Rename File"
			},
			{
				"command": "wt.createWorkspace",
				"title": "Create",
				"enablement": "!wt.valid"
			},
			{
				"command": "wt.workspace.loadContextValues",
				"title": "Writing Tool: Load context values JSON file into this workspace."
			},
			{
				"command": "wt.workspace.generateContextValues",
				"title": "Writing Tool: Generate context values file for this workspace."
			},
			{
				"command": "wt.wordCount.showWordCountRules",
				"title": "Writing Tool: Show word count information."
			},
			{
				"command": "wt.wordCount.showFullWordCounts",
				"title": "Writing Tool: Show word counts for full project."
			},
			{
				"command": "wt.outline.refresh",
				"title": "Writing Tool: Refresh Outline View",
				"icon": "$(refresh)"
			},
			{
				"command": "wt.outline.moveDown",
				"title": "Writing Tool: Move Resource Down",
				"icon": "$(diff-editor-next-change)"
			},
			{
				"command": "wt.outline.moveUp",
				"title": "Writing Tool: Move Resource Up",
				"icon": "$(diff-editor-previous-change)"
			},
			{
				"command": "wt.outline.help",
				"title": "Writing Tool: Outline View Help",
				"icon": "$(question)"
			},
			{
				"command": "wt.outline.openFile",
				"title": "Writing Tool: Open Fragment From Outline"
			},
			{
				"command": "wt.outline.renameFile",
				"title": "Writing Tool: Rename Resource"
			},
			{
				"command": "wt.outline.newSnip",
				"title": "Writing Tool: Create New Snip",
				"icon": "$(output-view-icon)"
			},
			{
				"command": "wt.outline.newChapter",
				"title": "Writing Tool: Create New Chapter",
				"icon": "$(open-editors-view-icon)"
			},
			{
				"command": "wt.outline.newFragment",
				"title": "Writing Tool: Create New Fragment",
				"icon": "$(search-new-editor)"
			},
			{
				"command": "wt.outline.removeResource",
				"title": "Writing Tool: Delete Resource in Outline"
			},
			{
				"command": "wt.outline.copyItems",
				"title": "Writing Tool: Copy Outline Tree Items"
			},
			{
				"command": "wt.outline.pasteItems",
				"title": "Writing Tool: Paste Outline Tree Items"
			},
			{
				"command": "wt.outline.duplicateItems",
				"title": "Writing Tool: Duplicate Outline Tree Items"
			},
			{
				"command": "wt.recyclingBin.renameFile",
				"title": "Writing Tool: Rename Recycled Resource"
			},
			{
				"command": "wt.recyclingBin.permanentlyDelete",
				"title": "Writing Tool: Pemanently Delete Resource"
			},
			{
				"command": "wt.recyclingBin.deleteAll",
				"title": "Writing Tool: Delete All",
				"icon": "$(circle-slash)"
			},
			{
				"command": "wt.recyclingBin.refresh",
				"title": "Writing Tool: Refresh Recycling Bin View",
				"icon": "$(refresh)"
			},
			{
				"command": "wt.import.fileExplorer.refresh",
				"title": "Writing Tool: Refresh Import File Explorer",
				"icon": "$(refresh)"
			},
			{
				"command": "wt.import.fileExplorer.importFiles",
				"title": "Writing Tool: Import All Files",
				"icon": "$(ports-forward-icon)"
			},
			{
				"command": "wt.import.fileExplorer.importFile",
				"title": "Writing Tool: Import Selected File"
			},
			{
				"command": "wt.import.fileExplorer.removeResource",
				"title": "Writing Tool: Remove File from Imports"
			},
			{
				"command": "wt.import.fileExplorer.help",
				"title": "Writing Tool: Import File Explorer Help",
				"icon": "$(question)"
			},
			{
				"command": "wt.import.fileExplorer.openImportWindow",
				"title": "Writing Tool: Open Import Folder",
				"icon": "$(folder-active)"
			},
			{
				"command": "wt.import.fileExplorer.filter",
				"title": "Writing Tool: Filter Selected Resource from Imports Folder",
				"icon": "$(close)"
			},
			{
				"command": "wt.import.fileExplorer.defilter",
				"title": "Writing Tool: Un-Filter Selected Resource from Imports Folder",
				"icon": "$(check)"
			},
			{
				"command": "wt.import.fileExplorer.openFileExplorer",
				"title": "Writing Tool: Open File Explorer",
				"icon": "$(file-directory)"
			},
			{
				"command": "wt.todo.refresh",
				"title": "Writing Tool: Refresh TODOs View",
				"icon": "$(refresh)"
			},
			{
				"command": "wt.todo.help",
				"title": "Writing Tool: TODOs View Help",
				"icon": "$(question)"
			},
			{
				"command": "wt.todo.enable",
				"title": "Writing Tool: Enable Automatic TODO Querying",
				"enablement": "!wt.todo.enabled"
			},
			{
				"command": "wt.todo.disable",
				"title": "Writing Tool: Disable Automatic TODO Querying (hit the refresh button to query TODOs manually)",
				"enablement": "wt.todo.enabled"
			},
			{
				"command": "wt.wordWatcher.enable",
				"title": "Writing Tool: Enable Word Watching",
				"enablement": "!wt.wordWatcher.enabled"
			},
			{
				"command": "wt.wordWatcher.disable",
				"title": "Writing Tool: Disable Word Watching (highlights for watched words will not appear)",
				"enablement": "wt.wordWatcher.enabled"
			},
			{
				"command": "wt.proximity.enable",
				"title": "Writing Tool: Enable Word Proximity Checks",
				"enablement": "!wt.proximity.enabled"
			},
			{
				"command": "wt.proximity.disable",
				"title": "Writing Tool: Disable Word Proximity Checks (removes highlights on duplicate words in close proximity)",
				"enablement": "wt.proximity.enabled"
			},
			{
				"command": "wt.spellcheck.enable",
				"title": "Writing Tool: Enable Spellcheck",
				"enablement": "!wt.spellcheck.enabled"
			},
			{
				"command": "wt.spellcheck.disable",
				"title": "Writing Tool: Disable Spellcheck",
				"enablement": "wt.spellcheck.enabled"
			},
			{
				"command": "wt.very.enable",
				"title": "Writing Tool: Enable Very Checks",
				"enablement": "!wt.very.enabled"
			},
			{
				"command": "wt.very.disable",
				"title": "Writing Tool: Disable Very Checks",
				"enablement": "wt.very.enabled"
			},
			{
				"command": "wt.colors.enable",
				"title": "Writing Tool: Enable Color Checks",
				"enablement": "!wt.colors.enabled"
			},
			{
				"command": "wt.colors.disable",
				"title": "Writing Tool: Disable Color Checks",
				"enablement": "wt.colors.enabled"
			},
			{
				"command": "wt.workBible.enable",
				"title": "Writing Tool: Enable Automatic World Notes Querying",
				"enablement": "!wt.todo.enabled"
			},
			{
				"command": "wt.workBible.disable",
				"title": "Writing Tool: Disable Automatic World Notes Querying",
				"enablement": "wt.todo.enabled"
			},
			{
				"command": "wt.proximity.addFilteredWord",
				"title": "Writing Tool: Remove word from proximity checks"
			},
			{
				"command": "wt.proximity.removeFilteredWord",
				"title": "Writing Tool: Add word back to proximity checks"
			},
			{
				"command": "wt.wordWatcher.help",
				"title": "Writing Tool: Word Watcher View Help",
				"icon": "$(question)"
			},
			{
				"command": "wt.wordWatcher.disableWatchedWord",
				"title": "Writing Tool: Disable Watched Word"
			},
			{
				"command": "wt.wordWatcher.enableWatchedWord",
				"title": "Writing Tool: Enable Watched Word"
			},
			{
				"command": "wt.wordWatcher.newWatchedWord",
				"title": "Writing Tool: Watch New Word",
				"icon": "$(plus)"
			},
			{
				"command": "wt.wordWatcher.newUnwatchedWord",
				"title": "Writing Tool: Prevent Watching Word",
				"icon": "$(dash)"
			},
			{
				"command": "wt.wordWatcher.deleteWord",
				"title": "Writing Tool: Delete Watched Word"
			},
			{
				"command": "wt.wordWatcher.deleteUnwatchedWord",
				"title": "Writing Tool: Delete Unwatched Word"
			},
			{
				"command": "wt.wordWatcher.jumpNextInstanceOf",
				"title": "Writing Tool: Jump to Next Instance of Watched Word"
			},
			{
				"command": "wt.wordWatcher.changeColor",
				"title": "Writing Tool: Change watched word color"
			},
			{
				"command": "wt.synonyms.help",
				"title": "Writing Tool: Synonyms View Help",
				"icon": "$(question)"
			},
			{
				"command": "wt.synonyms.searchWord",
				"title": "Writing Tool: Search Synonym",
				"icon": "$(search)"
			},
			{
				"command": "wt.editor.remove",
				"title": "Writing Tool: Clear Selection",
				"icon": "$(trash)"
			},
			{
				"command": "wt.editor.save",
				"title": "Writing Tool: Commit File (to local git)",
				"icon": "$(save)"
			},
			{
				"command": "wt.editor.saveAll",
				"title": "Writing Tool: Commit All Files (to local git)",
				"icon": "$(save-all)"
			},
			{
				"command": "wt.editor.italisize",
				"title": "Writing Tool: Italisize Selection",
				"icon": "$(italic)"
			},
			{
				"command": "wt.editor.commasize",
				"title": "Writing Tool: Commasize Selection"
			},
			{
				"command": "wt.editor.bold",
				"title": "Writing Tool: Bold Selection",
				"icon": "$(bold)"
			},
			{
				"command": "wt.editor.strikethrough",
				"title": "Writing Tool: Strike Selection",
				"icon": "$(zap)"
			},
			{
				"command": "wt.editor.underline",
				"title": "Writing Tool: Underline Selection",
				"icon": "$(layout-statusbar)"
			},
			{
				"command": "wt.editor.emdash",
				"title": "Writing Tool: Em Dash",
				"icon": "$(remove)"
			},
			{
				"command": "wt.editor.emdashes",
				"title": "Writing Tool: Em Dashes",
				"icon": "$(list-filter)"
			},
			{
				"command": "wt.editor.word.forward",
				"title": "Writing Tool: Jump to Word (forward)."
			},
			{
				"command": "wt.editor.word.backward",
				"title": "Writing Tool: Jump to Word (backward)."
			},
			{
				"command": "wt.editor.jump.sentence.forward",
				"title": "Writing Tool: Jump to Sentence (forward)."
			},
			{
				"command": "wt.editor.jump.sentence.backward",
				"title": "Writing Tool: Jump to Sentence (backward)."
			},
			{
				"command": "wt.editor.jump.fragment.forward",
				"title": "Writing Tool: Jump to Sentence Fragment (forward)."
			},
			{
				"command": "wt.editor.jump.fragment.backward",
				"title": "Writing Tool: Jump to Sentence Fragment (backward)."
			},
			{
				"command": "wt.editor.jump.paragraph.forward",
				"title": "Writing Tool: Jump to paragraph (forward)."
			},
			{
				"command": "wt.editor.jump.paragraph.backward",
				"title": "Writing Tool: Jump to paragraph (backward)."
			},
			{
				"command": "wt.editor.word.forward.shift",
				"title": "Writing Tool: Jump to Word (forward) (select)."
			},
			{
				"command": "wt.editor.word.backward.shift",
				"title": "Writing Tool: Jump to Word (backward) (select)."
			},
			{
				"command": "wt.editor.jump.sentence.forward.shift",
				"title": "Writing Tool: Jump to Sentence (forward) (select)."
			},
			{
				"command": "wt.editor.jump.sentence.backward.shift",
				"title": "Writing Tool: Jump to Sentence (backward) (select)."
			},
			{
				"command": "wt.editor.jump.fragment.forward.shift",
				"title": "Writing Tool: Jump to Sentence Framgent (forward) (select)."
			},
			{
				"command": "wt.editor.jump.fragment.backward.shift",
				"title": "Writing Tool: Jump to Sentence Framgent (backward) (select)."
			},
			{
				"command": "wt.editor.jump.paragraph.forward.shift",
				"title": "Writing Tool: Jump to paragraph (forward) (select)."
			},
			{
				"command": "wt.editor.jump.paragraph.backward.shift",
				"title": "Writing Tool: Jump to paragraph (backward) (select)."
			},
			{
				"command": "wt.editor.delete.forward",
				"title": "Writing Tool: Delete Word (forward)."
			},
			{
				"command": "wt.editor.delete.backward",
				"title": "Writing Tool: Delete Word (backward)."
			},
			{
				"command": "wt.personalDictionary.add",
				"title": "Writing Tool: Add word to personal dictionary"
			},
			{
				"command": "wt.personalDictionary.remove",
				"title": "Writing Tool: Remove word from personal dictionary"
			},
			{
				"command": "wt.colors.addColor",
				"title": "Writing Tool: Add Color to Color Group"
			},
			{
				"command": "wt.colors.removeColor",
				"title": "Writing Tool: Remove Color from Color Group"
			},
			{
				"title": "Writing Tool: Add Note",
				"command": "wt.workBible.addNote",
				"icon": "$(add)"
			},
			{
				"title": "Writing Tool: Remove Note",
				"command": "wt.workBible.removeNote",
				"icon": "$(remove)"
			},
			{
				"title": "Writing Tool: Add Alias",
				"command": "wt.workBible.addAlias",
				"icon": "$(add)"
			},
			{
				"title": "Writing Tool: Remove Alias",
				"command": "wt.workBible.removeAlias",
				"icon": "$(remove)"
			},
			{
				"title": "Writing Tool: Add Sub Note",
				"command": "wt.workBible.addSubNote",
				"icon": "$(add)"
			},
			{
				"title": "Writing Tool: Remove Sub Note",
				"command": "wt.workBible.removeSubNote",
				"icon": "$(remove)"
			},
			{
				"title": "Writing Tool: Add Appearance",
				"command": "wt.workBible.addAppearance",
				"icon": "$(add)"
			},
			{
				"title": "Writing Tool: Search For Note",
				"command": "wt.workBible.search"
			},
			{
				"title": "Writing Tool: Open Note in editor",
				"command": "wt.workBible.editNote",
				"icon": "$(edit)"
			},
			{
				"title": "Writing Tool: Display Options",
				"command": "wt.statusBarTimer.displayOptions",
				"when": "wt.valid && view == wt.wordWatcher"
			},
			{
				"title": "Writing Tool: Show Timer Rules",
				"command": "wt.statusBarTimer.showInfo",
				"when": "wt.valid && view == wt.wordWatcher"
			},
			{
				"title": "Writing Tool: Reset Timer",
				"command": "wt.statusBarTimer.resetTimer",
				"when": "wt.valid && view == wt.wordWatcher"
			},
			{
				"title": "Writing Tool: Comment sentence",
				"command": "wt.editor.todo.commentSentence"
			},
			{
				"title": "Writing Tool: Comment fragment",
				"command": "wt.editor.todo.commentFragment"
			},
			{
				"title": "Writing Tool: Comment paragraph",
				"command": "wt.editor.todo.commentParagraph"
			},
			{
				"title": "Writing Tool: Highlight sentence",
				"command": "wt.editor.highlightSentence"
			},
			{
				"title": "Writing Tool: Highlight fragment",
				"command": "wt.editor.highlightFragment"
			},
			{
				"title": "Writing Tool: Highlight paragraph",
				"command": "wt.editor.highlightParagraph"
			},
			{
				"title": "Writing Tool: Expand Highlight",
				"command": "wt.editor.highlightExpand"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "wt.tabLabels.rename",
					"when": "false,"
				},
				{
					"command": "wt.createWorkspace",
					"when": "false"
				},
				{
					"command": "wt.workspace.loadContextValues",
					"when": "false"
				},
				{
					"command": "wt.workspace.generateContextValues",
					"when": "false"
				},
				{
					"command": "wt.outline.moveDown",
					"when": "false"
				},
				{
					"command": "wt.outline.moveUp",
					"when": "false"
				},
				{
					"command": "wt.outline.openFile",
					"when": "false"
				},
				{
					"command": "wt.outline.renameFile",
					"when": "false"
				},
				{
					"command": "wt.outline.removeResource",
					"when": "false"
				},
				{
					"command": "wt.outline.copyItems",
					"when": "false"
				},
				{
					"command": "wt.outline.pasteItems",
					"when": "false"
				},
				{
					"command": "wt.outline.duplicateItems",
					"when": "false"
				},
				{
					"command": "wt.outline.copyPath",
					"when": "false"
				},
				{
					"command": "wt.outline.copyRelativePath",
					"when": "false"
				},
				{
					"command": "wt.recyclingBin.renameFile",
					"when": "false"
				},
				{
					"command": "wt.recyclingBin.permanentlyDelete",
					"when": "false"
				},
				{
					"command": "wt.recyclingBin.deleteAll",
					"when": "false"
				},
				{
					"command": "wt.todo.copyPath",
					"when": "false"
				},
				{
					"command": "wt.todo.copyRelativePath",
					"when": "false"
				},
				{
					"command": "wt.import.fileExplorer.importFile",
					"when": "false"
				},
				{
					"command": "wt.import.fileExplorer.removeResource",
					"when": "false"
				},
				{
					"command": "wt.import.fileExplorer.filter",
					"when": "false"
				},
				{
					"command": "wt.import.fileExplorer.defilter",
					"when": "false"
				},
				{
					"command": "wt.proximity.addFilteredWord",
					"when": "false"
				},
				{
					"command": "wt.proximity.removeFilteredWord",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.disableWatchedWord",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.enableWatchedWord",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.deleteWord",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.deleteUnwatchedWord",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.jumpNextInstanceOf",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.changeColor",
					"when": "false"
				},
				{
					"command": "wt.wordWatcher.changePattern",
					"when": "false"
				},
				{
					"command": "wt.editor.italisize",
					"when": "false"
				},
				{
					"command": "wt.editor.commasize",
					"when": "false"
				},
				{
					"command": "wt.editor.bold",
					"when": "false"
				},
				{
					"command": "wt.editor.strikethrough",
					"when": "false"
				},
				{
					"command": "wt.editor.underline",
					"when": "false"
				},
				{
					"command": "wt.editor.emdash",
					"when": "false"
				},
				{
					"command": "wt.editor.emdashes",
					"when": "false"
				},
				{
					"command": "wt.editor.word.forward",
					"when": "false"
				},
				{
					"command": "wt.editor.word.backward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.fragment.forward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.fragment.backward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.sentence.forward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.sentence.backward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.paragraph.forward",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.paragraph.backward",
					"when": "false"
				},
				{
					"command": "wt.editor.word.forward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.word.backward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.fragment.forward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.fragment.backward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.sentence.forward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.sentence.backward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.paragraph.forward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.jump.paragraph.backward.shift",
					"when": "false"
				},
				{
					"command": "wt.editor.delete.forward",
					"when": "false"
				},
				{
					"command": "wt.editor.delete.backward",
					"when": "false"
				},
				{
					"command": "wt.workBible.addNote",
					"when": "false"
				},
				{
					"command": "wt.workBible.removeNote",
					"when": "false"
				},
				{
					"command": "wt.workBible.addAlias",
					"when": "false"
				},
				{
					"command": "wt.workBible.removeAlias",
					"when": "false"
				},
				{
					"command": "wt.workBible.addSubNote",
					"when": "false"
				},
				{
					"command": "wt.workBible.removeSubNote",
					"when": "false"
				},
				{
					"command": "wt.workBible.addAppearance",
					"when": "false"
				},
				{
					"command": "wt.workBible.search",
					"when": "false"
				},
				{
					"command": "wt.workBible.editNote",
					"when": "false"
				},
				{
					"command": "wt.editor.todo.commentSentence",
					"when": "false"
				},
				{
					"command": "wt.editor.todo.commentFragment",
					"when": "false"
				},
				{
					"command": "wt.editor.todo.commentParagraph",
					"when": "false"
				},
				{
					"command": "wt.editor.highlightSentence",
					"when": "false"
				},
				{
					"command": "wt.editor.highlightFragment",
					"when": "false"
				},
				{
					"command": "wt.editor.highlightParagraph",
					"when": "false"
				},
				{
					"command": "wt.editor.highlightExpand",
					"when": "fals"
				}
			],
			"view/title": [
				{
					"command": "wt.outline.newFragment",
					"when": "wt.valid && view == wt.outline",
					"group": "navigation@1"
				},
				{
					"command": "wt.outline.newSnip",
					"when": "wt.valid && view == wt.outline",
					"group": "navigation@2"
				},
				{
					"command": "wt.outline.newChapter",
					"when": "wt.valid && view == wt.outline",
					"group": "navigation@3"
				},
				{
					"command": "wt.outline.refresh",
					"when": "wt.valid && view == wt.outline",
					"group": "navigation@4"
				},
				{
					"command": "wt.outline.help",
					"when": "wt.valid && view == wt.outline",
					"group": "navigation@5"
				},
				{
					"command": "wt.recyclingBin.deleteAll",
					"when": "wt.valid && view == wt.recyclingBin",
					"group": "navigation@2"
				},
				{
					"command": "wt.recyclingBin.refresh",
					"when": "wt.valid && view == wt.recyclingBin",
					"group": "navigation@1"
				},
				{
					"command": "wt.synonyms.help",
					"when": "wt.valid && view == wt.synonyms",
					"group": "navigation"
				},
				{
					"command": "wt.todo.refresh",
					"when": "wt.valid && view == wt.todo",
					"group": "navigation@1"
				},
				{
					"command": "wt.todo.help",
					"when": "wt.valid && view == wt.todo",
					"group": "navigation@2"
				},
				{
					"command": "wt.import.fileExplorer.help",
					"when": "wt.valid && view == wt.import.fileExplorer",
					"group": "navigation@5"
				},
				{
					"command": "wt.import.fileExplorer.openImportWindow",
					"when": "wt.valid && view == wt.import.fileExplorer",
					"group": "navigation@4"
				},
				{
					"command": "wt.import.fileExplorer.openFileExplorer",
					"when": "wt.valid && view == wt.import.fileExplorer",
					"group": "navigation@3"
				},
				{
					"command": "wt.import.fileExplorer.refresh",
					"when": "wt.valid && view == wt.import.fileExplorer",
					"group": "navigation@2"
				},
				{
					"command": "wt.import.fileExplorer.importFiles",
					"when": "wt.valid && view == wt.import.fileExplorer",
					"group": "navigation@1"
				},
				{
					"command": "wt.wordWatcher.newWatchedWord",
					"when": "wt.valid && view == wt.wordWatcher",
					"group": "navigation@1"
				},
				{
					"command": "wt.wordWatcher.newUnwatchedWord",
					"when": "wt.valid && view == wt.wordWatcher",
					"group": "navigation@2"
				},
				{
					"command": "wt.wordWatcher.help",
					"when": "wt.valid && view == wt.wordWatcher",
					"group": "navigation@3"
				},
				{
					"command": "wt.workBible.addNote",
					"when": "view == wt.workBible.tree",
					"group": "navigation"
				}
			],
			"editor/title/context": [
				{
					"command": "wt.tabLabels.rename"
				}
			],
			"view/item/context": [
				{
					"command": "wt.outline.refresh",
					"when": "view == wt.outline && viewItem == dir || viewItem == container",
					"group": "inline@3"
				},
				{
					"command": "wt.outline.moveUp",
					"when": "view == wt.outline && viewItem != container",
					"group": "inline@1"
				},
				{
					"command": "wt.outline.moveDown",
					"when": "view == wt.outline && viewItem != container",
					"group": "inline@2"
				},
				{
					"command": "wt.outline.renameFile",
					"when": "view == wt.outline"
				},
				{
					"command": "wt.outline.removeResource",
					"when": "view == wt.outline"
				},
				{
					"command": "wt.outline.copyItems",
					"when": "view == wt.outline",
					"group": "5_cutcopypaste@1"
				},
				{
					"command": "wt.outline.pasteItems",
					"when": "view == wt.outline",
					"group": "5_cutcopypaste@2"
				},
				{
					"command": "wt.outline.duplicateItems",
					"when": "view == wt.outline",
					"group": "5_cutcopypaste@3"
				},
				{
					"command": "wt.recyclingBin.renameFile",
					"when": "view == wt.recyclingBin"
				},
				{
					"command": "wt.recyclingBin.permanentlyDelete",
					"when": "view == wt.recyclingBin"
				},
				{
					"command": "wt.recyclingBin.deleteAll",
					"when": "view == wt.recyclingBin"
				},
				{
					"command": "wt.wordWatcher.deleteWord",
					"when": "view == wt.wordWatcher && (viewItem == watchedWord_disabled || viewItem == watchedWord_enabled)"
				},
				{
					"command": "wt.wordWatcher.disableWatchedWord",
					"when": "view == wt.wordWatcher && viewItem == watchedWord_enabled"
				},
				{
					"command": "wt.wordWatcher.enableWatchedWord",
					"when": "view == wt.wordWatcher && viewItem == watchedWord_disabled"
				},
				{
					"command": "wt.wordWatcher.deleteUnwatchedWord",
					"when": "view == wt.wordWatcher && viewItem == unwatchedWord"
				},
				{
					"command": "wt.wordWatcher.changeColor",
					"when": "view == wt.wordWatcher && viewItem == watchedWord_enabled"
				},
				{
					"command": "wt.import.fileExplorer.removeResource",
					"when": "view == wt.import.fileExplorer"
				},
				{
					"command": "wt.import.fileExplorer.filter",
					"when": "view == wt.import.fileExplorer && viewItem == unfiltered",
					"group": "inline"
				},
				{
					"command": "wt.import.fileExplorer.defilter",
					"when": "view == wt.import.fileExplorer && viewItem == filtered",
					"group": "inline"
				},
				{
					"command": "wt.workBible.addNote",
					"when": "view == wt.workBible.tree && viewItem == note",
					"group": "inline@1"
				},
				{
					"command": "wt.workBible.removeNote",
					"when": "view == wt.workBible.tree && viewItem == note",
					"group": "inline@2"
				},
				{
					"command": "wt.workBible.addSubNote",
					"when": "view == wt.workBible.tree && (viewItem == description || viewItem == appearance)",
					"group": "inline@1"
				},
				{
					"command": "wt.workBible.removeSubNote",
					"when": "view == wt.workBible.tree && (viewItem == description || viewItem == appearance)",
					"group": "inline@2"
				},
				{
					"command": "wt.workBible.addAppearance",
					"when": "view == wt.workBible.tree && (viewItem == appearanceContainer)",
					"group": "inline@1"
				},
				{
					"command": "wt.workBible.addAlias",
					"when": "view == wt.workBible.tree && viewItem == note"
				},
				{
					"command": "wt.workBible.removeAlias",
					"when": "view == wt.workBible.tree && viewItem == note"
				},
				{
					"command": "wt.workBible.addNote",
					"when": "view == wt.workBible.tree && viewItem == note",
					"group": "update@1"
				},
				{
					"command": "wt.workBible.removeNote",
					"when": "view == wt.workBible.tree && viewItem == note",
					"group": "update@2"
				},
				{
					"command": "wt.workBible.addSubNote",
					"when": "view == wt.workBible.tree && (viewItem == description || viewItem === appearance)",
					"group": "update@1"
				},
				{
					"command": "wt.workBible.removeSubNote",
					"when": "view == wt.workBible.tree && (viewItem == description || viewItem === appearance)",
					"group": "update@2"
				},
				{
					"command": "wt.workBible.search",
					"when": "view == wt.workBible.tree && viewItem == note",
					"group": "search@1"
				},
				{
					"command": "wt.workBible.editNote",
					"when": "view == wt.workBible.tree",
					"group": "inline@3"
				}
			],
			"editor/title": [
				{
					"command": "wt.editor.save",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@1"
				},
				{
					"command": "wt.editor.saveAll",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@2"
				},
				{
					"command": "wt.synonyms.searchWord",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@3"
				},
				{
					"command": "wt.editor.italisize",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@3"
				},
				{
					"command": "wt.editor.bold",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@5"
				},
				{
					"command": "wt.editor.strikethrough",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@6"
				},
				{
					"command": "wt.editor.underline",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@7"
				},
				{
					"command": "wt.editor.remove",
					"when": "editorLangId == wt || editorLangId == wtNote",
					"group": "navigation@9"
				}
			]
		},
		"keybindings": [
			{
				"command": "wt.recyclingBin.renameFile",
				"win": "f2",
				"linux": "f2",
				"mac": "f2",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.recyclingBin"
			},
			{
				"command": "wt.recyclingBin.permanentlyDelete",
				"win": "delete",
				"linux": "delete",
				"mac": "delete",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.recyclingBin"
			},
			{
				"command": "wt.outline.renameFile",
				"win": "f2",
				"linux": "f2",
				"mac": "f2",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.outline"
			},
			{
				"command": "wt.outline.copyItems",
				"win": "ctrl+c",
				"linux": "ctrl+c",
				"mac": "cmd+c",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.outline"
			},
			{
				"command": "wt.outline.pasteItems",
				"win": "ctrl+v",
				"linux": "ctrl+v",
				"mac": "cmd+v",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.outline"
			},
			{
				"command": "wt.outline.removeResource",
				"win": "delete",
				"linux": "delete",
				"mac": "delete",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.outline"
			},
			{
				"command": "wt.wordWatcher.deleteWord",
				"win": "delete",
				"linux": "delete",
				"mac": "delete",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.wordWatcher && viewItem == watchedWord"
			},
			{
				"command": "wt.wordWatcher.deleteUnwatchedWord",
				"win": "delete",
				"linux": "delete",
				"mac": "delete",
				"when": "activeViewlet == workbench.view.extension.wt && focusedView == wt.wordWatcher && viewItem == unwatchedWord"
			},
			{
				"command": "wt.synonyms.searchWord",
				"win": "ctrl+alt+f",
				"linux": "ctrl+alt+f",
				"mac": "cmd+alt+f",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.save",
				"win": "ctrl+alt+s",
				"linux": "ctrl+alt+s",
				"mac": "cmd+alt+s",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.saveAll",
				"win": "ctrl+alt+shift+s",
				"linux": "ctrl+alt+shift+s",
				"mac": "cmd+alt+shift+s",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.italisize",
				"win": "ctrl+alt+i",
				"linux": "ctrl+alt+i",
				"mac": "cmd+alt+i",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.commasize",
				"title": "Writing Tool: Commasize Selection"
			},
			{
				"command": "wt.editor.bold",
				"win": "ctrl+alt+b",
				"linux": "ctrl+alt+b",
				"mac": "cmd+alt+b",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.strikethrough",
				"win": "ctrl+alt+d",
				"linux": "ctrl+alt+d",
				"mac": "cmd+alt+d",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.underline",
				"win": "ctrl+alt+u",
				"linux": "ctrl+alt+u",
				"mac": "cmd+alt+u",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.emdash",
				"win": "ctrl+alt+-",
				"linux": "ctrl+alt+-",
				"mac": "cmd+alt+-",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.emdashes",
				"win": "ctrl+alt+shift+-",
				"linux": "ctrl+alt+shift+-",
				"mac": "cmd+alt+shift+-",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.word.forward",
				"win": "ctrl+left",
				"linux": "ctrl+left",
				"mac": "cmd+left",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.word.backward",
				"win": "ctrl+right",
				"linux": "ctrl+right",
				"mac": "cmd+right",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.sentence.forward",
				"win": "alt+[",
				"linux": "alt+[",
				"mac": "alt+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.sentence.backward",
				"win": "alt+]",
				"linux": "alt+]",
				"mac": "alt+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.fragment.forward",
				"win": "ctrl+[",
				"linux": "ctrl+[",
				"mac": "cmd+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.fragment.backward",
				"win": "ctrl+]",
				"linux": "ctrl+]",
				"mac": "cmd+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.paragraph.forward",
				"win": "ctrl+alt+[",
				"linux": "ctrl+alt+[",
				"mac": "cmd+alt+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.paragraph.backward",
				"win": "ctrl+alt+]",
				"linux": "ctrl+alt+]",
				"mac": "cmd+alt+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.word.forward.shift",
				"win": "ctrl+shift+left",
				"linux": "ctrl+shift+left",
				"mac": "cmd+shift+left",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.word.backward.shift",
				"win": "ctrl+shift+right",
				"linux": "ctrl+shift+right",
				"mac": "cmd+shift+right",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.sentence.forward.shift",
				"win": "alt+shift+[",
				"linux": "alt+shift+[",
				"mac": "alt+shift+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.sentence.backward.shift",
				"win": "alt+shift+]",
				"linux": "alt+shift+]",
				"mac": "alt+shift+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.fragment.forward.shift",
				"win": "ctrl+shift+[",
				"linux": "ctrl+shift+[",
				"mac": "cmd+shift+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.fragment.backward.shift",
				"win": "ctrl+shift+]",
				"linux": "ctrl+shift+]",
				"mac": "cmd+shift+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.paragraph.forward.shift",
				"win": "ctrl+alt+shift+[",
				"linux": "ctrl+alt+shift+[",
				"mac": "cmd+alt+shift+[",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.jump.paragraph.backward.shift",
				"win": "ctrl+alt+shift+]",
				"linux": "ctrl+alt+shift+]",
				"mac": "cmd+alt+shift+]",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.delete.forward",
				"win": "ctrl+backspace",
				"linux": "ctrl+backspace",
				"mac": "cmd+backspace",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.editor.delete.backward",
				"win": "ctrl+delete",
				"linux": "ctrl+delete",
				"mac": "cmd+delete",
				"when": "editorLangId == wt || editorLangId == wtNote"
			},
			{
				"command": "wt.intellisense.synonyms.prevDefinition",
				"win": "ctrl+up",
				"linux": "ctrl+up",
				"mac": "cmd+up",
				"when": "(suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion) && editorLangId == wt"
			},
			{
				"command": "wt.intellisense.synonyms.nextDefinition",
				"win": "ctrl+down",
				"linux": "ctrl+down",
				"mac": "cmd+down",
				"when": "(suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion) && editorLangId == wt"
			},
			{
				"command": "wt.intellisense.synonyms.prevSelection",
				"win": "up",
				"linux": "up",
				"mac": "up",
				"when": "(suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion) && editorLangId == wt"
			},
			{
				"command": "wt.intellisense.synonyms.nextSelection",
				"win": "down",
				"linux": "down",
				"mac": "down",
				"when": "(suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion) && editorLangId == wt"
			},
			{
				"command": "wt.editor.todo.commentSentence",
				"win": "ctrl+shift+/",
				"linux": "ctrl+shift+/",
				"mac": "cmd+shift+/",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.todo.commentFragment",
				"win": "alt+shift+/",
				"linux": "alt+shift+/",
				"mac": "alt+shift+/",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.todo.commentParagraph",
				"win": "ctrl+alt+shift+/",
				"linux": "ctrl+alt+shift+/",
				"mac": "cmd+alt+shift+/",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.highlightSentence",
				"win": "ctrl+shift+h",
				"linux": "ctrl+shift+h",
				"mac": "cmd+shift+h",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.highlightFragment",
				"win": "alt+shift+h",
				"linux": "alt+shift+h",
				"mac": "alt+shift+h",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.highlightParagraph",
				"win": "ctrl+alt+shift+h",
				"linux": "ctrl+alt+shift+h",
				"mac": "cmd+alt+shift+h",
				"when": "editorLangId == wt || editorLandId == wtNote"
			},
			{
				"command": "wt.editor.highlightExpand",
				"win": "ctrl+alt+h",
				"linux": "ctrl+alt+h",
				"mac": "cmd+alt+h",
				"when": "editorLangId == wt || editorLandId == wtNote"
			}
		],
		"languages": [
			{
				"id": "wt",
				"extensions": [
					".wt"
				],
				"aliases": [
					"writingTool",
					"fragment",
					"markdown",
					"Markdown"
				],
				"configuration": "./language-configuration.json",
				"icon": {
					"dark": "./media/icons/edit_darkmode.svg",
					"light": "./media/icons/edit_lightmode.svg"
				}
			},
			{
				"id": "wtNote",
				"extensions": [
					".wtnote"
				],
				"aliases": [
					"writingToolNotes",
					"markdown",
					"Markdown"
				],
				"configuration": "./language-configuration.json",
				"icon": {
					"dark": "./media/icons/edit_darkmode.svg",
					"light": "./media/icons/edit_lightmode.svg"
				}
			}
		],
		"walkthroughs": [
			{
				"id": "wt.introWalkthrough",
				"title": "Introduction to WTANIWE",
				"icon": "media/walkthroughs/icon.png",
				"description": "A broad overview of Writing Tool's major features.",
				"steps": [
					{
						"id": "wt.introWalkthrough.organizeIntoChapters",
						"title": "Organize Your Project by the Chapter",
						"description": "- The main impetus behind WANIWE's creation was the ability to organize my extremely fragmented WIP in an easier way.\n- One of the main features of WTANIWE, therefore, is the outline tree, where users can get a clear overview of their progress.",
						"media": {
							"image": "media/walkthroughs/intro/organize_into_chapters.png",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.organizeIntoFragments",
						"title": "Organize Your Project by Text Fragments",
						"description": "- Instead of throwing all content of a chapter into a single text file, with WTANIWE you can organize the content of your work by smaller, chunkable, text fragments.\n- Anywhere where you would insert a scene break in your work, just create a new text fragment and start with a fresh file.",
						"media": {
							"image": "media/walkthroughs/intro/organize_by_fragments.png",
							"altText": "Organize By Fragments"
						}
					},
					{
						"id": "wt.introWalkthrough.organizeChapterNotes",
						"title": "Organize Notes/Text Snippets for Each Chapter",
						"description": "- Another major motivation for WTANIWE was the ability to organize notes and snippets of text for each chapter in an easily organizable way.\n- Instead of opening twenty different word documents at a time while scouring for that one piece of dialogue I wrote two months ago, and killing my computer in the process, I can place all notes for a project in one place.\n- Just as with chapters, each text note (called snip by WTANIWE) can have multiple text fragments associated with it.",
						"media": {
							"image": "media/walkthroughs/intro/organize_chapter_notes.png",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.organizeWorkNotes",
						"title": "Organize Snips for Project",
						"description": "- If you're like me, you have about a hundred tiny fragments of text laying around which have a loose place in your story but no solid chapter commitement yet.  Work Snips is a section of the Outline Tree where you can store all misc. text snippets with no solid home yet.\n- Like Chapters and Chapter Snips, Work Snips can be separated into multiple text fragments.",
						"media": {
							"image": "media/walkthroughs/intro/organize_work_notes.png",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.usePlaintext",
						"title": "Write in Plain Text",
						"description": "- No wasting time for Microsoft to stir up twelve different processes to load one Word Document or for Google to serve you one fragment of your own project, all WTANIWE text files are stored in plain text on your own hard drive.\n- All text stylings you would expect from word are available through a modified version of MarkDown which is more amenable to writing (and, admittedly less feature-rich).\n- Surround text with asterisks (*) to italisize, hashtags (#) to bold, underscores (_) to underline, and tildes (~) to strike through.",
						"media": {
							"image": "media/walkthroughs/intro/style_text.png",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.wordWatcher",
						"title": "Highlight Problem Words or Phrases",
						"description": "- All people have crutch words and phrases that they over rely on when writing.\n- When using the Word Watcher panel you can enter these words and phrases into the Word Watcher panel, and WTANIWE will highlight them for you.\n- Use [regex](https://www.regex101.com) patterns to select text which fits a pattern instead of whole, known words.  (Such as the regex '[a-zA-Z]+ly' which captures all words that end in 'ly').\n- Modify the colors in the Word Watcher panel to clearly separate each watched word in a visually distinctive way.",
						"media": {
							"image": "media/walkthroughs/intro/word_watcher.png",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.synonyms",
						"title": "Quickly Find Synonyms For Words",
						"description": "- Without leaving the VS Code window or moving your mouse whatsoever, you can get synonyms for any selected word or phrase by hitting ctrl+space over a selection.\n- This will bring up an intellisense window of synonymous definitions.  Open a definition with enter, then select a synonym with enter again to replace the original.",
						"media": {
							"image": "media/walkthroughs/intro/use_synonyms.gif",
							"altText": "Organize By Chapters"
						}
					},
					{
						"id": "wt.introWalkthrough.navigate",
						"title": "Quickly Navigate your Text",
						"description": "- Use built in writing-focused keybindings to quickly navigate over sentences, sentence fragments, and paragraphs.\n- ctrl+[ / ctrl+] Jumps forward and backward through sentences.\n- alt+[ / alt+] Jumps forward and backward through sentence fragments.\n- ctrl+alt+[ / ctrl+alt+] Jumps forward and backward through paragraphs.",
						"media": {
							"image": "media/walkthroughs/intro/use_navigations.gif",
							"altText": "Use navigation"
						}
					},
					{
						"id": "wt.introWalkthrough.git",
						"title": "Use Git to Track your Progress",
						"description": "- If you've downloaded this from VS Code, you probably know all about git so I won't waste your time explaining it.\n- Git is the de facto source control management software in industry, so why not use it to track your WIP?",
						"media": {
							"image": "media/walkthroughs/intro/git.png",
							"altText": "Use navigation"
						}
					},
					{
						"id": "wt.introWalkthrough.importWork",
						"title": "Import Your Work",
						"description": "- WTANIWE makes it easy to import work from outside sources AND organize that work withing WTANIWE's outline.\n- WTANIWE's importing tool is feature rich and has an entirely separate walkthrough that you can open now or browse through when you want to import\n\n[Open Imports Walkthrough](command:wt.walkthroughs.openImports)",
						"media": {
							"image": "media/walkthroughs/intro/imports.png",
							"altText": "Organize By Chapters"
						}
					}
				]
			}
		],
		"grammars": [
			{
				"language": "wtNote",
				"scopeName": "source.wtNote",
				"path": "./syntaxes/wtNote.tmLanguage.json",
				"injectTo": ["wtNote"]
			},
			{
				"language": "wt",
				"scopeName": "source.wt",
				"path": "./syntaxes/wt.tmLanguage.json",
				"injectTo": ["wt"]
			}
		],
		"themes": [
            {
				"id": "wtNoteTheme",
                "label": "WT Note",
                "uiTheme": "vs-dark",
                "path": "./themes/wtNoteTheme.json"
            }
		]
	},
	"scripts": {
		"test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
		"pretest": "npm run compile-web",
		"vscode:prepublish": "npm run package-web",
		"compile-web": "webpack",
		"watch-web": "webpack --watch",
		"package-web": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
	},
	"devDependencies": {
		"@types/fs-extra": "^11.0.1",
		"@types/ftp": "^0.3.33",
		"@types/html-pdf": "^3.0.0",
		"@types/html-pdf-node": "^1.0.0",
		"@types/jsdom": "^21.1.0",
		"@types/mkdirp": "^0.5.2",
		"@types/mocha": "^10.0.1",
		"@types/node": "^16.11.7",
		"@types/rimraf": "^2.0.2",
		"@types/showdown": "^2.0.0",
		"@types/uuid": "^9.0.0",
		"@types/vscode": "^1.73.0",
		"@types/webpack-env": "^1.18.0",
		"@typescript-eslint/eslint-plugin": "^5.42.0",
		"@typescript-eslint/parser": "^5.42.0",
		"@vscode/test-web": "^0.0.33",
		"assert": "^2.0.0",
		"eslint": "^8.26.0",
		"mocha": "^10.1.0",
		"process": "^0.11.10",
		"ts-loader": "^9.4.1",
		"typescript": "^4.8.4",
		"webpack": "^5.75.0",
		"webpack-cli": "^5.0.0"
	},
	"dependencies": {
		"@bendera/vscode-webview-elements": "^0.8.1",
		"@types/markdown-it": "^12.2.3",
		"@vscode/codicons": "^0.0.32",
		"buffer": "^6.0.3",
		"minimist": "^1.2.6",
		"node-fetch-commonjs": "^3.2.4",
		"turndown": "^7.1.2",
		"uuid": "^9.0.0",
		"vscode-uri": "^3.0.7"
	}
}
